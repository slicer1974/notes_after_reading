Следующие паттерны являются одними из наиболее распространенных способов мышления и поведения людей в отношении программных интерфейсов:
Safe Exploration (Безопасное исследование). 
Instant Gratification (Мгновенное вознаграждение). 
Satisficing (Разумная достаточность). 
Changes in Midstream (Изменения на полпути).
Deferred Choices (Отложенный выбор). 
Incremental Construction (Пошаговое построение). 
Habituation (Привыкание). Microbreaks (Микроперерывы). 
Spatial Memory (Пространственная память). 
Prospective Memory (Проспективная память). 
Streamlined Repetition (Упрощенное повторение). 
Keyboard Only (Только клавиатура). 
Social Media, Social Proof, and Collaboration (Социальные сети, социальное подтверждение и коллаборация).

#Safe Exploration (Безопасное исследование).
Когда пользователь понимает, что у него есть возможность исследовать интерфейс без «серьезных последствий», то, скорее всего, он в итоге узнает больше и получит более позитивные впечатления о приложении, чем тот, кто на это не решился. Хорошая программа позволяет людям пробовать неизвестные функции и возвращать систему в исходное состояние, снова пробовать что-то новое и т. д., безо всякого стресса. «Серьезные последствия» даже не обязательно должны быть действительно серьезными. Простой досады бывает достаточно, чтобы отпугнуть пользователя от добровольного изучения возможностей. Необходимость закрывать всплыва- ющие окна, повторно вводить ошибочно стертые данные, поспешно отключать звук на ноутбуке, когда на сайте неожиданно начинает играть громкая музы- ка, — все это может отпугнуть. Создавая практически любой тип интерфейса, подготовьте для пользователя безопасные способы изучить его, чтобы он __мог экспериментировать, не опасаясь последствий.__

#Instant Gratification (Мгновенное вознаградение).
Если пользователю ­необходимо выполнить какую-либо задачу, то подскажите ему, с чего начать. Это также означает, что не следует прятать начальный функционал за тем, что нужно долго читать, или тем, чего нужно долго ждать, например экраном регистрации, длинными инструкциями, медленно загружающимися страницами или объявлениями. Они отбивают охоту использовать приложение, так как не позволяют быстро завершить первую задачу.
Используйте в интерфейсе «призывы к действию». 
* Давайте пользователям четкие указания: введите текст здесь; перетащите изображение сюда; коснитесь этой кнопки, чтобы начать работу, и т. д. 
* Делайте ярлыки короткими и используйте простые слова, позволяющие их быстро прочитать (это относится к элементам меню, кнопкам, ссылкам или любым другим текстовым компонентам). Пользователь пробегает их глазами и делает выводы об их значении, поэтому пишите так, чтобы первое предположение всегда оказывалось верным. Если пользователь ошибется несколько раз, то он будет разочарован, а это плохо для вас обоих.
* Макет интерфейса должен отражать назначение его элементов.
* Продумайте простой способ навигации; особенно это касается возвращения в точки, где второпях можно легко сделать неправильный выбор. Преду­смотрите «аварийные выходы». На стандартных веб-сайтах легко использовать кнопку «Назад», поэтому разработать простую навигацию назад-вперед важно и для веб-приложений, десктопных приложений, мобильных устройств.

#Changes in Midstream (Изменения на полпути).
Иногда люди меняют решения прямо в процессе.Для дизайнера это означает, что он должен дать пользователю возможность __изменить поставленную цель.__ Предоставьте ему право выбора. Не запирайте пользователя в среде с ограниченным выбором и без глобальной навигации либо связи с другими страницами или функционалом, если только на это нет веских причин.

#Deferred Choices (Отложенный выбор). 
* Не заваливайте пользователя избытком вопросов и вариантов выбора с самого начала. 
* В формах для заполнения четко помечайте необходимые поля и не делайте слишком много обязательных полей. Позвольте пользователю продолжать работу, не тратя времени на необязательные вопросы. 
* Иногда можно отделять несколько важных вопросов или настроек от остальных, менее значительных. Выводите на экран короткий список и прячьте длинный.
* По возможности используйте паттерн Good Defaults (Хорошие варианты по умолчанию), чтобы дать пользователям несколько подходящих вариантов ответа по умолчанию, с которых удобно начать работу. Однако помните, что заранее подготовленные ответы все равно требуют их проверки пользователем на случай, если их понадобится изменить. Им тоже нужно уделять внимание.
* Обеспечьте пользователю __возможность вернуться__ к заполнению отложенных полей позже и сделайте к ним простой и понятный доступ. Иногда в диалого- вых окнах помещают краткие подсказки вроде «Вы всегда сможете изменить эти данные, нажав кнопку “Редактировать проект”». Некоторые веб-сайты сохраняют наполовину заполненные пользовательские формы или другие постоянные данные, например содержимое корзин с еще не приобретенными товарами. 
* Если на веб-сайте с полезными услугами обязательна регистрация, то поль- зователи пройдут ее с намного большей вероятностью, если сначала по- зволить им поработать с сайтом — втянуться и увлечься — и только после этого спрашивать, кто же они такие. На некоторых сайтах можно совершить покупку вообще без регистрации; лишь в самом конце пользователя спрашивают, хочет ли он, чтобы данные, которые он указал о себе, автоматически сохранились в новой учетной записи.